version: '3.8'
services:

  eintaxid-link-harvester:
    build:
      context: .
      dockerfile: ./config/docker/Dockerfile_jar_local
      args:
        - JAR_FILE=eintaxid-link-harvester/target/eintaxid-link-harvester*.jar
    environment:
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "9001:9001"
    networks:
      - cs-network
    depends_on:
#      - postgres
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 1Gb
        reservations:
          memory: 512M


  eintaxid-exporter:
    build:
      context: .
      dockerfile: ./config/docker/Dockerfile_jar_local
      args:
        - JAR_FILE=eintaxid-extractor/target/eintaxid-extractor*.jar
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - cs-network
    deploy:
      resources:
        limits:
          memory: 1Gb
        reservations:
          memory: 512M
      replicas: 10
    depends_on:
#      - postgres
      - rabbitmq


  eintaxid-saver:
    build:
      context: .
      dockerfile: ./config/docker/Dockerfile_jar_local
      args:
        - JAR_FILE=eintaxid-saver/target/eintaxid-saver*.jar
    environment:
      - DB_URL=jdbc:postgresql://172.17.0.1:5432/cs_db
#      - DB_URL=jdbc:postgresql://postgres:5432/cs_db
#      - DB_URL=jdbc:postgresql://localhost:5432/cs_db
      - RABBITMQ_HOST=rabbitmq
    networks:
      - cs-network
    deploy:
      resources:
        limits:
          memory: 1Gb
        reservations:
          memory: 512M
      replicas: 10
    depends_on:
#      - postgres
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: cs_app
      RABBITMQ_DEFAULT_PASS: 3211
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - cs-network


#  postgres:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: cs_db
#      POSTGRES_USER: cs_app
#      POSTGRES_PASSWORD: 3211
#    volumes:
#      - ./max_connections.sql:/docker-entrypoint-initdb.d/max_conns.sql
#    ports:
#      - "5411:5432"
#    networks:
#      - cs-network


networks:
  cs-network:
    driver: bridge



